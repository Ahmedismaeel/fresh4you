name: "Build & Release"

on:
  push:
    branches:
      - main
permissions:
  contents: write

jobs:  # Telling what jobs we need to happen
  build:      # Specify the building name and machine
    name: Build & Release  # you can name the build whatever you want
    runs-on: ubuntu-latest # change to ubuntu-latest to support container actions
    
    steps:
      #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'

      #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      #5 Get Version from pubspec.yaml
      - name: Get Version
        id: get_version
        run: echo "VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2)" >> $GITHUB_ENV

      #6 Build APK
      - name: Build APK
        run: flutter build apk --release

      #7 Rename APK with Version
      - name: Rename APK
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/fresh4you_${{ env.VERSION }}.apk

      #8 Upload APK
      - name: Upload APK 
        uses: actions/upload-artifact@v4
        with:
          name: fresh4you_${{ env.VERSION }}
          path: build/app/outputs/flutter-apk/fresh4you_${{ env.VERSION }}.apk

      #9 Upload APK to Firebase App Distribution
      - name: Upload APK to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: build/app/outputs/flutter-apk/fresh4you_${{ env.VERSION }}.apk

      # #10 Upload APK to File.io
      # - name: Upload APK to File.io
      #   run: |
      #     response=$(curl -F "file=@build/app/outputs/flutter-apk/fresh4you_${{ env.VERSION }}.apk" https://file.io)
      #     echo "DOWNLOAD_LINK=$(echo $response | jq -r '.link')" >> $GITHUB_ENV

      #11 Send Email with Download Link
      - name: Send Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Build Completed
          body: |
            The build has been completed successfully. 
          to: foxahmed71@gmail.com
          from: ahmed.alsabonabi@gmail.com 

  notify_failure:
    name: Notify Failure
    runs-on: ubuntu-latest # change to ubuntu-latest to match the build job
    needs: build
    if: failure()
    steps:
      - name: Upload Logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: ${{ runner.temp }}/_temp/_runner_file_commands/*.log

      - name: Send Failure Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Build Failed
          body: The build has failed. Please check the attached logs for more details.
          to: foxahmed71@gmail.com
          from: ahmed.alsabonabi@gmail.com
          attachments: ${{ runner.temp }}/_temp/_runner_file_commands/*.log
